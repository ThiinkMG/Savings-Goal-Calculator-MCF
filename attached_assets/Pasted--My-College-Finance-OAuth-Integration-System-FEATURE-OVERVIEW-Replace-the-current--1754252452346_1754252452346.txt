## **My College Finance OAuth Integration System**

### **FEATURE OVERVIEW**
Replace the current "My College Finance" login/signup with a secure OAuth-style redirect popup that sends users to the main website for authentication, then automatically logs them into the app upon successful completion.

---

### **1. UPDATED LOGIN SCREEN DESIGN**

#### **Modified Login Form:**
```
┌─────────────────────────────────────────┐
│ Sign In to Your Account                 │
├─────────────────────────────────────────┤
│ Email, Phone, or Username               │
│ [_____________________________]        │
│                                         │
│ Password                                │
│ [_____________________________] [👁]   │
│                                         │
│ [ ] Remember me                         │
│                                         │
│ [         Sign In         ]             │
│                                         │
│ ──────── Or ────────                    │
│                                         │
│ [  📚 Sign In with My College Finance  ]│ ← POPUP REDIRECT
│                                         │
│ ────────────────────────────────────   │
│                                         │
│ Don't have an account? [Sign Up]        │
│ Forgot Password/Username?               │
└─────────────────────────────────────────┘
```

#### **Updated Signup Screen:**
```
┌─────────────────────────────────────────┐
│ Create Your Account                     │
├─────────────────────────────────────────┤
│ Choose your account type:               │
│                                         │
│ ┌─────────────────────────────────────┐ │
│ │ 🚀 App-Only Account                 │ │
│ │ Quick signup for calculator only    │ │
│ │ [    Create App Account    ]        │ │
│ └─────────────────────────────────────┘ │
│                                         │
│ ┌─────────────────────────────────────┐ │
│ │ 📚 My College Finance Account       │ │
│ │ Full access to courses & tools      │ │
│ │ [  Create Website Account  ]        │ │ ← POPUP REDIRECT
│ └─────────────────────────────────────┘ │
│                                         │
│ Already have an account? [Sign In]      │
└─────────────────────────────────────────┘
```

---

### **2. POPUP REDIRECT AUTHENTICATION**

#### **OAuth-Style Popup Flow:**
```javascript
// When user clicks "Sign In with My College Finance"
const handleWixAuth = () => {
  // Generate secure state parameter
  const state = generateSecureState();
  
  // Build auth URL with callback
  const authUrl = `https://mycollegefinance.com/auth/app-login?` +
    `state=${state}&` +
    `redirect_uri=${encodeURIComponent(APP_CALLBACK_URL)}&` +
    `app_name=savings_calculator`;
  
  // Open popup window
  const popup = window.open(
    authUrl,
    'wix_auth',
    'width=500,height=700,scrollbars=yes,resizable=yes'
  );
  
  // Listen for auth completion
  window.addEventListener('message', handleAuthCallback, false);
  
  // Check if popup was closed manually
  const checkClosed = setInterval(() => {
    if (popup.closed) {
      clearInterval(checkClosed);
      window.removeEventListener('message', handleAuthCallback);
      // Handle popup closed without auth
    }
  }, 1000);
};
```

#### **Popup Authentication Page (On Wix Site):**
```html
<!-- https://mycollegefinance.com/auth/app-login -->
<!DOCTYPE html>
<html>
<head>
    <title>Connect to Savings Calculator</title>
    <style>
        body { 
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto;
            margin: 0;
            padding: 20px;
            background: #f8fafc;
        }
        .auth-container {
            max-width: 400px;
            margin: 0 auto;
            background: white;
            padding: 32px;
            border-radius: 12px;
            box-shadow: 0 4px 6px rgba(0,0,0,0.1);
        }
        .header {
            text-align: center;
            margin-bottom: 24px;
        }
        .logo {
            width: 60px;
            height: 60px;
            margin: 0 auto 16px;
        }
    </style>
</head>
<body>
    <div class="auth-container">
        <div class="header">
            <div class="logo">📚</div>
            <h2>Connect Your Account</h2>
            <p>Sign in to sync with the Savings Calculator</p>
        </div>
        
        <div id="auth-options">
            <!-- Show login form if user not logged in -->
            <div id="login-form" style="display: block;">
                <h3>Sign In</h3>
                <form id="loginForm">
                    <input type="email" placeholder="Email" required>
                    <input type="password" placeholder="Password" required>
                    <button type="submit">Sign In & Connect</button>
                </form>
                
                <div class="divider">───── OR ─────</div>
                
                <h3>Create New Account</h3>
                <form id="signupForm">
                    <input type="text" placeholder="Full Name" required>
                    <input type="email" placeholder="Email" required>
                    <input type="password" placeholder="Password" required>
                    <button type="submit">Create Account & Connect</button>
                </form>
            </div>
            
            <!-- Show connection confirmation if user already logged in -->
            <div id="connect-form" style="display: none;">
                <h3>Connect Account</h3>
                <p>Hello, <span id="user-name"></span>!</p>
                <p>Connect your My College Finance account to the Savings Calculator?</p>
                <button id="connect-btn">Yes, Connect Account</button>
                <button id="cancel-btn">Cancel</button>
            </div>
        </div>
    </div>

    <script>
        // Auth popup logic here
    </script>
</body>
</html>
```

---

### **3. AUTHENTICATION CALLBACK SYSTEM**

#### **App Callback Handler:**
```javascript
// Listen for auth completion from popup
const handleAuthCallback = (event) => {
  // Verify origin for security
  if (event.origin !== 'https://mycollegefinance.com') return;
  
  const { type, data } = event.data;
  
  switch (type) {
    case 'AUTH_SUCCESS':
      handleAuthSuccess(data);
      break;
    case 'AUTH_ERROR':
      handleAuthError(data);
      break;
    case 'AUTH_CANCELLED':
      handleAuthCancelled();
      break;
  }
};

const handleAuthSuccess = async (authData) => {
  try {
    // Exchange auth code for app token
    const response = await fetch('/api/auth/wix-callback', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        authCode: authData.code,
        state: authData.state,
        wixMemberId: authData.memberId
      })
    });
    
    const result = await response.json();
    
    if (result.success) {
      // Store app token
      localStorage.setItem('auth_token', result.token);
      
      // Update app state
      setUser(result.user);
      setIsAuthenticated(true);
      
      // Show success message
      toast.success('Connected to My College Finance!');
      
      // Redirect to dashboard
      navigate('/dashboard');
    }
  } catch (error) {
    handleAuthError({ message: error.message });
  }
};
```

#### **Wix Popup Communication:**
```javascript
// In the Wix auth popup page
const handleWixAuthSuccess = (memberData, authToken) => {
  // Send success message to parent app
  window.opener.postMessage({
    type: 'AUTH_SUCCESS',
    data: {
      code: authToken,
      state: getStateFromUrl(),
      memberId: memberData._id,
      email: memberData.loginEmail,
      profile: memberData.profile
    }
  }, APP_ORIGIN);
  
  // Close popup
  window.close();
};

const handleWixAuthError = (error) => {
  // Send error message to parent app
  window.opener.postMessage({
    type: 'AUTH_ERROR',
    data: {
      message: error.message,
      code: error.code
    }
  }, APP_ORIGIN);
  
  // Close popup
  window.close();
};

// If user cancels
const handleCancel = () => {
  window.opener.postMessage({
    type: 'AUTH_CANCELLED',
    data: {}
  }, APP_ORIGIN);
  
  window.close();
};
```

---

### **4. WIX SITE AUTH PAGE IMPLEMENTATION**

#### **Wix Page Backend Code:**
```javascript
// pages/auth/app-login.js (Wix backend)
import { members } from 'wix-members';
import { authentication } from 'wix-members';

export async function appLogin_post(request) {
  const { email, password, action } = await request.body.json();
  
  try {
    if (action === 'login') {
      // Authenticate existing member
      const loginResult = await authentication.login(email, password);
      
      if (loginResult.success) {
        const member = await members.getCurrentMember();
        
        // Generate auth token for app
        const authToken = await generateAppAuthToken(member._id);
        
        return {
          success: true,
          member: member,
          authToken: authToken
        };
      }
    } else if (action === 'signup') {
      // Create new member
      const registrationResult = await authentication.register(email, password, {
        contactInfo: {
          firstName: request.body.firstName,
          lastName: request.body.lastName
        }
      });
      
      if (registrationResult.success) {
        // Auto-login new member
        await authentication.login(email, password);
        const member = await members.getCurrentMember();
        
        // Generate auth token for app
        const authToken = await generateAppAuthToken(member._id);
        
        return {
          success: true,
          member: member,
          authToken: authToken,
          isNewMember: true
        };
      }
    }
  } catch (error) {
    return {
      success: false,
      error: error.message
    };
  }
}

// Helper function to generate secure auth token
async function generateAppAuthToken(memberId) {
  const tokenData = {
    memberId: memberId,
    timestamp: Date.now(),
    expiresIn: 3600 // 1 hour
  };
  
  // Sign token with secret
  return jwt.sign(tokenData, WIX_AUTH_SECRET);
}
```

#### **Wix Page Frontend Code:**
```javascript
// pages/auth/app-login.js (Wix frontend)
import { fetch } from 'wix-fetch';

$w.onReady(function () {
  const urlParams = new URLSearchParams(window.location.search);
  const state = urlParams.get('state');
  const redirectUri = urlParams.get('redirect_uri');
  
  // Check if user already logged in
  checkExistingLogin();
  
  // Handle login form
  $w('#loginForm').onSubmit(async (event) => {
    event.preventDefault();
    
    const email = $w('#emailInput').value;
    const password = $w('#passwordInput').value;
    
    try {
      const response = await fetch('/auth/app-login', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          email,
          password,
          action: 'login'
        })
      });
      
      const result = await response.json();
      
      if (result.success) {
        sendAuthResult('AUTH_SUCCESS', {
          code: result.authToken,
          state: state,
          memberId: result.member._id
        });
      } else {
        showError(result.error);
      }
    } catch (error) {
      sendAuthResult('AUTH_ERROR', { message: error.message });
    }
  });
  
  // Handle signup form
  $w('#signupForm').onSubmit(async (event) => {
    // Similar to login but with signup action
  });
});

function sendAuthResult(type, data) {
  // Send message to app popup parent
  const message = { type, data };
  window.parent.postMessage(message, redirectUri);
}
```

---

### **5. APP AUTHENTICATION ENDPOINTS**

#### **Wix Callback Handler:**
```javascript
// POST /api/auth/wix-callback
app.post('/api/auth/wix-callback', async (req, res) => {
  const { authCode, state, wixMemberId } = req.body;
  
  try {
    // Verify state parameter
    if (!verifyState(state)) {
      return res.status(400).json({ error: 'Invalid state parameter' });
    }
    
    // Verify auth token with Wix
    const wixMember = await verifyWixAuthToken(authCode);
    
    if (!wixMember) {
      return res.status(401).json({ error: 'Invalid auth token' });
    }
    
    // Check if app user exists
    let appUser = await findUserByWixId(wixMemberId);
    
    if (!appUser) {
      // Create new app user from Wix data
      appUser = await createAppUserFromWix(wixMember);
    }
    
    // Link accounts if not already linked
    await linkWixAccount(appUser.id, wixMemberId);
    
    // Sync latest data
    await syncWixDataToApp(wixMember, appUser.id);
    
    // Generate app JWT
    const appToken = generateAppJWT(appUser);
    
    res.json({
      success: true,
      token: appToken,
      user: appUser,
      wixMember: {
        id: wixMember._id,
        email: wixMember.loginEmail,
        membershipTier: wixMember.customFields?.membershipLevel || 'free'
      }
    });
    
  } catch (error) {
    console.error('Wix auth callback error:', error);
    res.status(500).json({ error: 'Authentication failed' });
  }
});
```

#### **Wix Token Verification:**
```javascript
const verifyWixAuthToken = async (authToken) => {
  try {
    // Verify JWT token from Wix
    const decoded = jwt.verify(authToken, WIX_AUTH_SECRET);
    
    // Get member data from Wix API
    const member = await wixService.getMemberById(decoded.memberId);
    
    return member;
  } catch (error) {
    console.error('Token verification failed:', error);
    return null;
  }
};
```

---

### **6. STATE MANAGEMENT & SECURITY**

#### **Secure State Generation:**
```javascript
// Generate secure state parameter
const generateSecureState = () => {
  const timestamp = Date.now();
  const random = crypto.randomBytes(16).toString('hex');
  const state = `${timestamp}.${random}`;
  
  // Store state temporarily (5 minute expiration)
  storeTemporaryState(state, timestamp + 300000);
  
  return state;
};

// Verify state parameter
const verifyState = (state) => {
  const [timestamp, random] = state.split('.');
  const now = Date.now();
  
  // Check if state exists and hasn't expired
  const storedState = getTemporaryState(state);
  
  return storedState && (now - parseInt(timestamp)) < 300000; // 5 minutes
};
```

#### **Cross-Origin Security:**
```javascript
// App origin whitelist
const ALLOWED_ORIGINS = [
  'https://mycollegefinance.com',
  'https://www.mycollegefinance.com',
  // Add other trusted domains
];

// Message event security
const handleAuthCallback = (event) => {
  // Verify origin
  if (!ALLOWED_ORIGINS.includes(event.origin)) {
    console.warn('Unauthorized auth attempt from:', event.origin);
    return;
  }
  
  // Process auth result
  processAuthResult(event.data);
};
```

---

### **7. USER EXPERIENCE FLOW**

#### **Complete User Journey:**

**Step 1 - User Action:**
```
User clicks "Sign In with My College Finance"
↓
App generates secure state & opens popup
```

**Step 2 - Popup Auth:**
```
Popup opens to: mycollegefinance.com/auth/app-login
↓
User sees familiar Wix login/signup forms
↓
User authenticates (existing) or creates account (new)
```

**Step 3 - Success Handling:**
```
Wix generates auth token & sends to popup
↓
Popup sends success message to app with token
↓
App verifies token with Wix & creates/links account
↓
Popup closes, user automatically logged into app
```

**Step 4 - Data Sync:**
```
App syncs member data from Wix
↓
User sees personalized dashboard with Wix account info
↓
Ongoing bidirectional sync established
```

---

### **8. ERROR HANDLING & FALLBACKS**

#### **Popup Blocked Fallback:**
```javascript
const handleWixAuth = () => {
  const popup = window.open(authUrl, 'wix_auth', 'width=500,height=700');
  
  // Check if popup was blocked
  if (!popup || popup.closed || typeof popup.closed === 'undefined') {
    // Fallback to redirect
    showPopupBlockedModal();
  } else {
    // Normal popup flow
    setupPopupListener(popup);
  }
};

const showPopupBlockedModal = () => {
  // Show modal with redirect option
  modal.show({
    title: 'Popup Blocked',
    content: 'Please allow popups or click below to sign in',
    actions: [
      {
        text: 'Open in New Tab',
        action: () => window.open(authUrl, '_blank')
      }
    ]
  });
};
```

#### **Network Error Handling:**
```javascript
const handleAuthError = (errorData) => {
  const errorMessages = {
    'POPUP_BLOCKED': 'Please allow popups for seamless sign-in',
    'NETWORK_ERROR': 'Connection failed. Please check your internet',
    'INVALID_CREDENTIALS': 'Invalid email or password',
    'ACCOUNT_NOT_FOUND': 'Account not found. Would you like to create one?',
    'SERVER_ERROR': 'Our servers are busy. Please try again'
  };
  
  const message = errorMessages[errorData.code] || errorData.message;
  
  toast.error(message);
  
  // Offer fallback options
  if (errorData.code === 'ACCOUNT_NOT_FOUND') {
    showCreateAccountOption();
  }
};
```

---

### **9. REPLIT IMPLEMENTATION CHECKLIST**

**Phase 1 - Remove Current Wix Integration:**
- [ ] Remove existing "My College Finance" login form
- [ ] Remove current Wix account creation flow
- [ ] Clean up unused authentication endpoints
- [ ] Backup any existing Wix user data

**Phase 2 - Popup Auth System:**
- [ ] Create popup authentication service
- [ ] Build secure state generation/verification
- [ ] Implement message passing between popup and app
- [ ] Add popup blocked detection and fallbacks

**Phase 3 - Wix Site Auth Page:**
- [ ] Create auth popup page on Wix site
- [ ] Implement Wix login/signup forms
- [ ] Add auth token generation
- [ ] Set up secure communication with app

**Phase 4 - App Integration:**
- [ ] Update login screen with popup button
- [ ] Modify signup screen with account type choice
- [ ] Implement auth callback handler
- [ ] Add token verification system

**Phase 5 - Data Sync:**
- [ ] Build account linking system
- [ ] Implement member data sync
- [ ] Add conflict resolution
- [ ] Set up real-time sync triggers

**Phase 6 - Error Handling:**
- [ ] Add comprehensive error handling
- [ ] Implement fallback flows
- [ ] Create user-friendly error messages
- [ ] Add retry mechanisms

**Phase 7 - Testing:**
- [ ] Test popup auth flow
- [ ] Verify cross-origin security
- [ ] Test with popup blockers
- [ ] Validate data sync integrity
- [ ] Mobile browser testing

This approach gives you a clean OAuth-style integration that leverages Wix's existing authentication while keeping your app-only accounts separate and functional.