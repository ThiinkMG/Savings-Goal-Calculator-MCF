import { type SavingsGoal } from '@shared/schema';
import { formatCurrency, formatDate, calculateSavings } from './calculations';

export async function generateSavingsPlanPDF(
  goal: SavingsGoal,
  userInfo: { name: string; startDate: Date },
  isDarkMode: boolean = false
): Promise<void> {
  // Dynamic import for jsPDF to avoid SSR issues
  const { default: jsPDF } = await import('jspdf');
  
  const pdf = new jsPDF();
  const pageWidth = pdf.internal.pageSize.getWidth();
  const pageHeight = pdf.internal.pageSize.getHeight();
  
  // Colors based on theme
  const colors = isDarkMode ? {
    primary: [35, 63, 143], // Brand blue for dark mode
    secondary: [16, 185, 129], // Brand green
    text: [248, 250, 252], // Light text
    background: [30, 41, 59], // Dark background
    muted: [100, 116, 139] // Muted text
  } : {
    primary: [23, 63, 143], // Brand blue
    secondary: [16, 185, 129], // Brand green
    text: [31, 41, 55], // Dark text
    background: [255, 255, 255], // Light background
    muted: [100, 116, 139] // Muted text
  };

  // Set background color
  if (isDarkMode) {
    pdf.setFillColor(...colors.background);
    pdf.rect(0, 0, pageWidth, pageHeight, 'F');
  }

  // Header
  pdf.setFontSize(24);
  pdf.setTextColor(...colors.primary);
  pdf.text('My College Finance', 20, 30);
  
  pdf.setFontSize(12);
  pdf.setTextColor(...colors.muted);
  pdf.text('EDUCATE • MOTIVATE • ELEVATE', 20, 40);

  // Title
  pdf.setFontSize(20);
  pdf.setTextColor(...colors.text);
  pdf.text('Savings Goal Plan', 20, 60);

  // Personal Information
  pdf.setFontSize(14);
  pdf.setTextColor(...colors.primary);
  pdf.text('Personal Information', 20, 80);
  
  pdf.setFontSize(11);
  pdf.setTextColor(...colors.text);
  pdf.text(`Name: ${userInfo.name}`, 20, 95);
  pdf.text(`Plan Created: ${formatDate(userInfo.startDate)}`, 20, 105);

  // Goal Details
  const calculations = calculateSavings(
    goal.targetAmount,
    goal.currentSavings,
    new Date(goal.targetDate),
    goal.monthlyCapacity || undefined
  );

  pdf.setFontSize(14);
  pdf.setTextColor(...colors.primary);
  pdf.text('Goal Details', 20, 130);

  pdf.setFontSize(11);
  pdf.setTextColor(...colors.text);
  const goalDetails = [
    `Goal Name: ${goal.name}`,
    `Goal Type: ${goal.goalType.charAt(0).toUpperCase() + goal.goalType.slice(1)}`,
    `Target Amount: ${formatCurrency(goal.targetAmount)}`,
    `Current Savings: ${formatCurrency(goal.currentSavings)}`,
    `Target Date: ${formatDate(new Date(goal.targetDate))}`,
  ];

  goalDetails.forEach((detail, index) => {
    pdf.text(detail, 20, 145 + (index * 10));
  });

  // Savings Plan
  pdf.setFontSize(14);
  pdf.setTextColor(...colors.primary);
  pdf.text('Your Savings Plan', 20, 210);

  pdf.setFontSize(11);
  pdf.setTextColor(...colors.text);
  const planDetails = [
    `Monthly Savings Required: ${formatCurrency(calculations.monthlyRequired)}`,
    `Time Remaining: ${calculations.monthsRemaining} months`,
    `Amount Still Needed: ${formatCurrency(calculations.amountNeeded)}`,
    `Current Progress: ${calculations.progressPercent.toFixed(1)}%`,
    `Plan Status: ${calculations.isFeasible ? 'Achievable' : 'Challenging - Consider Adjusting'}`,
  ];

  planDetails.forEach((detail, index) => {
    pdf.text(detail, 20, 225 + (index * 10));
  });

  // What-If Scenarios
  pdf.setFontSize(14);
  pdf.setTextColor(...colors.secondary);
  pdf.text('What-If Scenarios', 20, 290);

  pdf.setFontSize(11);
  pdf.setTextColor(...colors.text);
  pdf.text(`Save $50 more per month: Reach goal ${calculations.scenarios.save50More.monthsSaved} months earlier`, 20, 305);
  pdf.text(`Save $100 more per month: Reach goal ${calculations.scenarios.save100More.monthsSaved} months earlier`, 20, 315);

  // Footer
  pdf.setFontSize(8);
  pdf.setTextColor(...colors.muted);
  pdf.text('Generated by My College Finance - Your Financial Education Partner', 20, pageHeight - 20);
  pdf.text(`Theme: ${isDarkMode ? 'Dark' : 'Light'} Mode | Generated on ${formatDate(new Date())}`, 20, pageHeight - 10);

  // Download the PDF
  const fileName = `${goal.name.replace(/[^a-z0-9]/gi, '_').toLowerCase()}_savings_plan_${new Date().toISOString().split('T')[0]}.pdf`;
  pdf.save(fileName);
}
